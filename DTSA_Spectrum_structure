	  Detector_Rec 				= Record	  			Spec	: (EDS,WDS,EELS);				ID		: integer;				end;       Expt_InfoRec                 = RECORD		{ this starts a ref file also }                    LastSpect					 : Integer;		{ last Spectrum# }					FirstSpec	    			 : Integer;		{ first Spectrum# }								        Specimen_ID                  : String[50];	{no mechanism for input}					MCA_Filename                 : String[25];					Specimen_Comment_Field       : Str255;								        Was_PassWord                 : String[25];	{ not used, was 25 bytes }				    RefFile            			 : Boolean;     { if set, Spectrum_Data can't be edited }                    Analyst                      : String[50];						Detector					 : Detector_Rec;{ spectroscopy, the xtal or chip or mode }					Azimuth                      : real;    { degrees }					Elevation                    : real;    { degrees }					Detector_Area                : real;    { cm sq }					Detector_Thickness           : real;    { mm }					C_Thickness                  : real;    { um }					Diamond                      : real;    { um }					Mylar                        : real;    { um }					BN_Thickness                 : real;    { um }					SiN_Thickness                : real;    { um }					Ice_Thickness                : real;    { um, as pure oxygen }					Au_Thickness                 : real;    { um }					Al_Thickness                 : real;    { um }					Be_Thickness                 : real;    { um }					Si_Thickness                 : real;    { um }					spare		                 : real;    					spare1                       : real;                    WDS_Resolution               : real;     					dE						 	 : real;					Si_Resolution            	 : real;    { eV at Mn K alpha }					Energy_Intercept         	 : real;    { y intercept in eV }                    Energy_Slope             	 : real;    { }									    Number_of_Channels       	 : integer;       					kV                       	 : real;					Detector_Tilt                : real;    { Beta }					Quantum                      : real;					Spare2                       : Boolean;	{ the Demo file boolean }					Spare3                       : Integer;							end;		 	 Element_InfoRec			= RECORD					Atomic_number                : Integer;				    Spare1                       : real;   					Weight_Fraction              : real; { We will always store as wt fr }				    Spare2                       : real; 					Valence                      : real;        end;						     Plot_InfoRec				= RECORD		            Plot_Connected               : Integer;                    Plot_Symbol                  : Integer;					Spectrum_Color               : RGBColor; {Red, Green, Blue}       end;	   {SDD} Acq_InfoPtr			= ^Acq_InfoRec;	  Acq_InfoRec  			= RECORD				    Probed_Area                  : real;     { cm sq. to calculate current density }					X_Position                   : real;    { dimensionless }					Y_Position                   : real;    { dimensionless }				    Spare1                       : real; 					FirstChannel                 : integer;					LastChannel                  : integer;                    Begin_Faraday                : real;    { nA }                    End_Faraday                  : real;    { nA }                    Begin_Time                   : Longint;					FirstValue                   : Real;    { eg if WDS spectrum the begin lamda}					EndValue                     : Real;					spare2                       : integer;                    Real_Time                    : real;         { The time on the wall }                    Live_Time                    : real;                      Slow_Channel_Counts          : Longint;  { Represents total out counts }					Medium_Channel_Counts        : Longint;  { If UTW. Approx. input counts below 1 keV }                    Fast_Channel_Counts          : Longint;  { Represents total input counts above 1 keV } 				    RequestedLiveTime            : LongInt;	 					ActualLiveTime               : LongInt;	 				      				Acquiring                    : Boolean;					LLD							 : INTEGER;		{ Acquisition setup dialog box }					Offset						 : INTEGER;		{ Acquisition setup dialog box }					PulseProcessorType			 : INTEGER;					PulseProcessorSetting		 : INTEGER;	   end;	   	 Spectrum_InfoRec				= RECORD				                    Spectrum_Type                : String[4];	{ used mostly for WDS }	  					Spectrum_Comment_Field       : Str255;					Spectrum_Number              : Integer; { Position of spectrum in a collection }					Spectrum_Class               : String[25];					Theoretically_Generated      : Boolean;					This_is_a_Standard           : Boolean;					BkgSubtracted                : Boolean;					Maximum_Counts               : real;					Minimum_Counts               : real;					X_Tilt                       : real;     					Y_Tilt                       : real;     					Take_Off_Angle               : real;     					Spec_Detector_Distance       : real;    { mm }                    Spare                        : real;       					Specimen_Thickness           : real;    { cm }										Specimen_Density             : real;    { g/cm sq. }					Number_of_Elements           : Integer;					{ееееееееееееееееееееееееееееее еееееееееееее еееееееееееееееееее ееееееееееееееееееееееееее}															Element_Info				 : array[1..15] of Element_InfoRec;					extra_space					 : array[1..157] of real;					WDS_in_eV					 : boolean;					bool2						 : boolean;					{ееееPlease note that MaxNumPks was 15 at one time. Some un-named person made it 50.     Hence the extra storage.}	 {ееееееееееееееееееееееееееееее еееееееееееее еееееееееееееееееее ееееееееееееееееееееееееее}	 					Average_Z                    : real;					Spare1                       : real;					Spare2                       : Boolean;	{ used to denote demo spectrum }					Spare3                       : Integer;					END;						Spectrum_Structure				 = RECORD				   Spectrum_Info			: Spectrum_InfoRec; 				   Acq_Info				   	: Acq_InfoRec;				   END;						Work_Spectrum				  = RECORD				   Expt_Info				: Expt_InfoRec;				   Plot_Info				: Plot_InfoRec; 				   SpectrumStuff            : Spectrum_Structure;   				   S                  		: Spectrum_counts;			   END;      WorkPtr                       = ^Work_Spectrum;      WorkS                         = ^WorkPtr;