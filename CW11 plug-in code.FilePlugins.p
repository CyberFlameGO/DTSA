UNIT FilePlugIns;INTERFACEUSES	Types,QuickDraw,Memory,OSUtils,ToolUtils,Windows, Menus, TextEdit, TextUtils, Timer, StandardFile,		 Controls, Errors, Files, Retrace, SegLoad, Resources, Dialogs, Lists, Printing, Packages, fenv, fp;(**************************************************************************)CONST	{ Operation messages }	fileAbout		= 0;		{Plugin should display about dialog								}	ImpFile			= 1;		{Read the imported file.										}	ExpFile			= 2;		{Write the exported file.										}	OpenInPlug		= 3;	OpenExPlug		= 4;	fileBadParameters=-1;		MaxFilePlugins		= 20;	ImpPlugFileType		= 'DTim';	ExpPlugFileType		= 'DTem';	PlugFileCreator		= 'DTSA';	FilePlugRezType		= 'DTpl';TYPE	FilePlugRezHdl		= ^FilePlugRezPtr;	{ Plugin resource information, compatablity check during load	}	FilePlugRezPtr		= ^FilePlugRez;	FilePlugRez			= PACKED RECORD		version			: Integer;			{ The version number of the interface supported.		}		subVersion		: Integer;			{ The sub-version number.						  		}		priority		: Integer;			{ The plug-in's priority.                       		}		Spare1			: Integer;		SpecificHost	: OSType;			{ PlugIn functions only with Host of OSType Type		}		CanAcqSpectra	: Boolean;			{ Can Acquire X-ray Spectra								}		CanAcqXRImage	: Boolean;			{ Can Acquire X-ray images								}		CanAcqImage		: Boolean;			{ Can Acquire SEM/STEM images							}		SpareBoolean	: Boolean;		reserved		: LongInt;	END;											{ ¥ This is used by all File plugins to pass information}	IOPlugPtr		= ^IOPlug;	IOPlug			= RECORD		serialNumber	: LongInt;			{ Host serial number (future copy protection for plugin	}		hostVersion		: Integer;			{ Host version number									}		hostsubVersion	: Integer;			{ Host subversion number								}		hostModes		: LongInt;			{ Host modes that are supported (spectra,images, etc.).	}		hostMaxChan		: LongInt;			{ Maximum of channels that can be passed back to host 	}		PlugInName		: Str255;			{ Menu Name for PlugIn, Fill in for 'open' or leave ''	}		Specimen_Comment_Field       : Str255;		Title_Comment_Field		     : Str255;		Owner						 : STRING[50];		dE						 	 : real;		kV                       	 : real;		Begin_Faraday                : real;    { nA }		End_Faraday                  : real;    { nA }		FirstValue                   : Real;    { eg if WDS spectrum the begin lamda}		EndValue                     : Real;		Real_Time                    : real;         { The time on the wall }		Live_Time                    : real;		Energy_Slope                 : real;		Energy_Intercept             : real;		D_Azimuth					 : real;		D_Elevation					 : real;		D_Solid_Angle				 : real;		Mn_FWHM						 : real;		X_Tilt						 : real;		Y_Tilt						 : real;		T_Be_Wind					 : real;		T_Au_Wind					 : real;		T_Al_Wind					 : real;		T_Py_Wind					 : real;		T_BN_Wind					 : real;		T_Di_Wind					 : real;		T_HC_Wind					 : real;		T_Dead_Layr					 : real;		T_Act_Layr					 : real;		S_Thickness                  : real;		X_Pos						 : real;		Y_Pos						 : real;		NDoffset		             : Longint;		Begin_Time                   : Longint;		Number_of_Channels       	 : integer;		Spectrum_Type 				 : string[4];		FirstChannel                 : integer;		LastChannel                  : integer;				rd_refNum					 : integer;		Spare2                       : Boolean;		Spare4						 : Boolean;		Spec_cts					 : ARRAY [1..8192] OF Real;	END;											{ ¥ This is used by FilePlugins to remember each plugin	}	FilePlugHdl			= ^FilePlugPtr;	FilePlugPtr			= ^FilePlug;	FilePlug			= RECORD		fRefNum			: Integer;			{ fRefnum of plugin file								}		vRefNum			: Integer;			{ vRefnum of plugin file								}		DirID			: LongInt;			{ directory ID of plugin file							}		PlugID			: Integer;					PlugName		: Str255;			{ Name of the DTSA plugin name							}		ReqDestBuff		: Integer;		FixupMenus		: Boolean;		theProc			: ProcPtr;			{ Plugin code location (filled when plugin is loaded)	}		IOPtr			: IOPlugPtr;		{ Ptr to file plugin's record 							}		PrivData		: Ptr;				{ Used for plug-in private data (global), NIL 1st time	}	END;IMPLEMENTATIONEND.