unit Transfer;interface	uses		Memory, Types, QuickDraw, OSUtils, ToolUtils, Printing, Packages, fp {SANE}, 		CITInitialize, PasLibIntf, Spectrum_Structures, Declarations, INITIALIZE, Utilities,		Global_Functions, sandia ;		 procedure Open_OldFit_File;  implementation{$S Transfer}var bytecount  : Longint;	procedure Open_OldFit_File;	var	str,str1,str2,str3,str4,str5,str6,str7,str8   : str255; 		begin		mytype := 'MCAb';		myprompt := 'Open Old Fit File:';		repeat		until (GetFileName(OutName, mytype, mytype, myprompt) = True) or (File_Cancel_Button = False);		if (File_Cancel_Button) then			begin				MCA_ResultsName := OutName;				MCA_Results_VolNum := In_VolRefNum;				NumtoString(MCA_Results_VolNum, str1);{putmessage('File Name is', MCA_ResultsName, 'In_VolRefNum is', str1);}				errCode := FSOpen(MCA_ResultsName, MCA_Results_VolNum, refnum);				NumtoString(refnum, str1);{putmessage(' ', '', 'RefNum is', str1);}				if errCode <> 0 then					putmessage('An FSOpen(...) error in procedure Open_OldFit_File just happened', '', '', '');				errCode := setfpos(refnum, fsFromstart, 0);				if errCode <> 0 then					putmessage('A setfpos(...) error in procedure Open_OldFit_File just happened', '', '', '');				bytecount := 1;				errCode := FSRead(refnum, bytecount, @Is_Batch);				if errCode <> 0 then					putmessage('An FSRead(...) error in procedure Open_OldFit_File at 1 just happened', '', '', '');				bytecount := sizeof(Simplex_Fit);				errCode := FSRead(refnum, bytecount, @analysis_result^^);				if errCode <> 0 then					putmessage('An FSRead(...) error in procedure Open_OldFit_File at 2 just happened', '', '', '');				if Is_Batch then					str5 := 'Is_Batch is True'				else					str5 := 'Is_Batch is False';				errcode := FSClose(refnum);				errcode := FlushVol(nil, MCA_Results_VolNum);				MCA_File_Boolean := true;      { the file does exist }				Plain_options := false;             { we did not pick Plain name in MCA output options }				Plain_Boolean := false;	          { there is no plain name file.}				ReviewFitResults(PlainName,Plain_VolNum);			end;	                                        { if...}	end;end. { of UNIT }