UNIT CDEF;(*	Control Definition Function for Count Rate Meters (Input count rate, Dead time)*)INTERFACEUSES	Types,QuickDraw,QuickDrawText,TextUtils,Memory,OSUtils,ToolUtils,Controls,Fonts,Packages,fp,PascalA4;{$Main}FUNCTION CountMeter(varCode:Integer;theControl:ControlHandle;message:Integer;param:Longint):Longint;IMPLEMENTATIONFUNCTION CountMeter(varCode:Integer;theControl:ControlHandle;message:Integer;param:Longint):Longint;CONST	CountMeterFont				= Monaco;	CountMeterFSize				= 9;	CountMeterHeight			= 80;	CountMeterWidth				= 40;VAR	tRect		: Rect;	IL,JL		: LongInt;	tmpValue	: LongInt;	II,JI		: Integer;	tStr		: STR255;	IR,JR		: REAL;	CMGrafPtr	: GrafPtr; {offscreen bitmap pointer}	OldA4		: Longint;BEGIN	OldA4:=SetCurrentA4;	HLock(Handle(theControl));	theControl^^.contrlValue:=0;	CASE message OF		drawCntl	:			WITH theControl^^ DO BEGIN		{Draw visible parts of control}				CMGrafPtr:=GrafPtr(contrldata);				IF contrlVis<>0 THEN BEGIN					SetPort(CMGrafPtr);					EraseRect(CMGrafPtr^.portRect);					pennormal;					tRect:=contrlRect;					PenSize(2,2);					FrameRect(tRect);					{Draw control outline}					PenSize(1,1);					tRect.top:=tRect.bottom-14;			{form title Rect}					FrameRect(tRect);					{frame title Rect}					MoveTo(tRect.left+4,tRect.bottom-3);{move to start of title text}					DrawString(contrlTitle);			{draw title text}					tRect.top:=tRect.top+3;					InsetRect(tRect,2,0);				{form indicator Rect}					IR:={Num2Real}(contrlRect.bottom-contrlRect.top-14);					IF ((contrlRfCon<27000) and (contrlRfCon>=0)) THEN BEGIN						tmpValue:=contrlmax;			{this way to prevent integer overflow}					 	JR:={Num2Real}(contrlRfCon) * IR / {Num2Real}(tmpValue-contrlmin)					END ELSE BEGIN						JR:={Num2Real}(27000) * IR / {Num2Real}(contrlmax);					END;										JI:= trunc{Num2Integer}(JR);					 					OffSetRect(tRect,0,-(JI+14));		{position indicator to zero}					FrameRect(tRect);					{frame indicator Rect}					NumToString(contrlRfCon,tStr);				{convert value to string}					II:=((tRect.right-tRect.left) DIV 2)-(StringWidth(tStr) DIV 2);					MoveTo(tRect.left+II-1,tRect.bottom-2);{move to start of indicator text}					DrawString(tStr);					{draw indicator value}					SetPort(GrafPtr(contrlOwner));					BackColor(WhiteColor);					ForeColor(BlackColor);					CopyBits(CMGrafPtr^.portBits,GrafPtr(contrlOwner)^.portBits,							 CMGrafPtr^.portBits.bounds,ContrlRect,SrcCopy,Nil);				END;	  		END;		testCntl	:			WITH theControl^^ DO BEGIN		{Test which control part has mousedown}				IF contrlHilite=255 THEN BEGIN					CountMeter:=0;						{Return 0 if 255 hiliting}				END ELSE IF contrlHilite=254 THEN BEGIN					CountMeter:=254;					{Return 254 if 254 hiliting}				END;			END;		calcCRgns	:			WITH theControl^^ DO BEGIN		{Calculate control's region in window}				RectRgn(RgnHandle(param),contrlRect);	{For now, its a Rect region}	  		END;		initCntl	:			WITH theControl^^ DO BEGIN					{Initialize extra control fields}				contrlRfCon:=0;				contrlAction:=Pointer(-1);				ReserveMem(SizeOf(GrafPort));				{So no fragmentation}				contrldata:=Handle(NewPtr(SizeOf(GrafPort)));	{Create the offsreen bitmap}				CMGrafPtr:=GrafPtr(contrldata);				OpenPort(CMGrafPtr);				CMGrafPtr^.TxFont:=CountMeterFont;		{Good looking small font}				CMGrafPtr^.TxSize:=CountMeterFSize;		{Small size}				IL:=contrlRect.right-contrlRect.left;				JL:=contrlRect.bottom-contrlRect.top;				WITH CMGrafPtr^.portBits DO BEGIN	{create the bitmap}					baseAddr:=NewPtr(IL*JL);					rowbytes:=IL;					bounds:=contrlRect;				END;			END;		dispCntl	:			WITH theControl^^ DO BEGIN		{Dispose of extra control fields}				CMGrafPtr:=GrafPtr(contrldata);				DisposePtr(CMGrafPtr^.portBits.baseAddr);				DisposePtr(Ptr(CMGrafPtr));			END;		posCntl		:			WITH theControl^^ DO BEGIN		{Move control within window}			END;		thumbCntl	:			WITH theControl^^ DO BEGIN		{Calculate thumb constraints}			END;		dragCntl	:			WITH theControl^^ DO BEGIN		{Drag control}				CountMeter:=0;						{Return 0 so system handles it}			END;		autoTrack	:			WITH theControl^^ DO BEGIN		{Do mousedown on control}			END;	END; {Case}	HUnLock(Handle(theControl));	OldA4:=SetA4(OldA4);END;END.